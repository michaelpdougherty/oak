extends layout

block script
    script(src="/grades.js")

block layout-content
  div.View.MainView(id="cardsView")
    div.Banner
      a(href="/logout")
        img(src="logout.svg").LogoutButton
      h1.Username.Uppercase #{user.username}
    div.FlexContainer
      - let n = 0
      each val in user.grades
        - let fPeriod = val.period.split("(")[0]

        - let tchs = val.teacher.split("; ")
        - let ftch
        if tchs.length === 1
          - ftch = `${val.teacher.split(", ")[1]} ${val.teacher.split(", ")[0]}`
        else
          - let tArr = []
          - let splt
          each i in tchs
            - splt = i.split(", ")
            - tArr.push(`${splt[1]} ${splt[0]}`)
          - ftch = tArr.join(", ")

        - let fClass = val.class
        - let sClass = fClass.split(" ")
        - let avg = val.average
        if sClass[0][1] === "S"
          - fClass = sClass.slice(1).join(" ")
        - let redir = `expand(${n})`
        div.FlexItem.Message(onclick=redir)
          table.table.FlexTable.FlexTableTop
            tr.FlexHeadingRow
              td.FlexHeading Period
              td.FlexHeading Room
              td.FlexHeading Absences
              td.FlexHeading Tardies
            tr.FlexHeadingRowBottom
              td.FlexHeadingBottom= fPeriod
              td.FlexHeadingBottom= val.room
              td.FlexHeadingBottom= val.absences
              td.FlexHeadingBottom= val.tardies
          table.table.FlexTable.FlexTableBottom
            tr
              td= fClass
              td(rowspan=2).Avg
                if avg >= 90
                  span.highlight.a= `${avg} A`
                else if avg >= 80
                  span.highlight.b= `${avg} B`
                else if avg >= 70
                  span.highlight.c= `${avg} C`
                else if avg >= 60
                  span.highlight.d= `${avg} D`
                else if avg
                  span.highlight.f= `${avg} F`
            tr
              if val.teacher
                td= ftch
        - n++
  - let count = 0
  - let maxCount = user.assignments.length
  each val in user.grades
    div.View
      - let fPeriod = val.period.split("(")[0]
      - let tchs = val.teacher.split("; ")
      - let ftch
      if tchs.length === 1
        - ftch = `${val.teacher.split(", ")[1]} ${val.teacher.split(", ")[0]}`
      else
        - let tArr = []
        - let splt
        each i in tchs
          - splt = i.split(", ")
          - tArr.push(`${splt[1]} ${splt[0]}`)
        - ftch = tArr.join(", ")
      - let fClass = val.class
      - let sClass = fClass.split(" ")
      - let avg = val.average
      if sClass[0][1] === "S"
        - fClass = sClass.slice(1).join(" ")
      div.mainContainer
        h1.BannerTwo= fClass
        table.table.FlexTable.FlexTableTop
          tr.FlexHeadingRow
            td.FlexHeading Period
            td.FlexHeading Room
            td.FlexHeading Absences
            td.FlexHeading Tardies
          tr.FlexHeadingRowBottom
            td.FlexHeadingBottom= fPeriod
            td.FlexHeadingBottom= val.room
            td.FlexHeadingBottom= val.absences
            td.FlexHeadingBottom= val.tardies
        table.table.FlexTable.FlexTableBottom
          tr
            if val.teacher
              td= ftch
            td.Avg
              if avg >= 90
                span.highlight.a #{avg} A
              else if avg >= 80
                span.highlight.b #{avg} B
              else if avg >= 70
                span.highlight.c #{avg} C
              else if avg >= 60
                span.highlight.d #{avg} D
              else if avg
                span.highlight.f #{avg} F
      div.BigAssignmentBox
        div.AssignmentBox
          if count < maxCount
            if user.assignments[count].length > 0
              each i in user.assignments[count]
                - let pp = parseInt(i.percentage)
                  div.Message.AssignmentMessage
                    p.DateDue #{i.dateDue.split("/").join(".")}
                    p.AssignmentName= i.assignmentName
                    div.ScoreBox
                      if i.percentage.toUpperCase() === "E"
                        p.Percentage Exempt
                      else if i.percentage === "Ungraded" || i.fraction === "Ungraded"
                        p.Percentage Ungraded
                      else if i.percentage === "Inc"
                        p.Percentage Incomplete
                      else
                        p.Percentage
                          if pp >= 89.5
                            span.highlight.a #{i.percentage.split("%")[0]} A
                          else if pp >= 79.5
                            span.highlight.b #{i.percentage.split("%")[0]} B
                          else if pp >= 69.5
                            span.highlight.c #{i.percentage.split("%")[0]} C
                          else if pp >= 59.5
                            span.highlight.d #{i.percentage.split("%")[0]} D
                          else if !isNaN(pp)
                            span.highlight.f #{i.percentage.split("%")[0]} F
                          else
                            span #{i.fraction} #{i.percentage.split("%")[0]}
                        p.Score= i.fraction
                    p.CategoryDesc= i.categoryDesc
            else
              div(style="margin-left: auto; margin-right: auto;").Message.AssignmentMessage No assignments
          else
            div(style="margin-left: auto; margin-right: auto;").Message.AssignmentMessage No assignments
      div.NavButtons
        div(onclick="expand('close')").NavButton Back
    - count++
